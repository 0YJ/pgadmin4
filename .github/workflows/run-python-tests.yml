name: Run Python tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

env:
  POSTGRESQL_VERSION: 15

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup the PGDG APT repo
        run: |
          sudo sh -c 'echo "deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - name: Install platform dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential python3-dev python3-pip libpq-dev libffi-dev libssl-dev libkrb5-dev zlib1g-dev postgresql-${POSTGRESQL_VERSION} postgresql-${POSTGRESQL_VERSION}-pldebugger pgagent
      - name: Create the tablespace directory
        run: |
          sudo mkdir -p /var/lib/postgresql/tablespaces/${POSTGRESQL_VERSION}
          sudo chown postgres:postgres /var/lib/postgresql/tablespaces/${POSTGRESQL_VERSION}
      - name: Start PostgreSQL
        run: |
          # Note: we use a custom port for PostgreSQL as the runner may already have a version of PostgreSQL installed
          sudo su -c "echo local all all trust > /etc/postgresql/${POSTGRESQL_VERSION}/main/pg_hba.conf"
          sudo sed -i "s/port = 543[0-9]/port = 59${POSTGRESQL_VERSION}/g" /etc/postgresql/${POSTGRESQL_VERSION}/main/postgresql.conf
          sudo sed -i "s/#shared_preload_libraries = ''/shared_preload_libraries = '\$libdir\/plugin_debugger'/g" /etc/postgresql/${POSTGRESQL_VERSION}/main/postgresql.conf
          sudo su - postgres -c "/usr/lib/postgresql/${POSTGRESQL_VERSION}/bin/postgres -D /var/lib/postgresql/${POSTGRESQL_VERSION}/main -c config_file=/etc/postgresql/${POSTGRESQL_VERSION}/main/postgresql.conf &"
          
          until sudo runuser -l postgres -c "pg_isready -p 59${POSTGRESQL_VERSION}" 2>/dev/null; do
            >&2 echo "Postgres is unavailable - sleeping for 2 seconds"
            sleep 2
          done
          psql -U postgres -p 59${POSTGRESQL_VERSION} -c 'CREATE EXTENSION pgagent;'
          psql -U postgres -p 59${POSTGRESQL_VERSION} -c 'CREATE EXTENSION pldbgapi;'
      - name: Install Python dependencies
        run: |
          sudo pip install --upgrade pip
          sudo pip install -r web/regression/requirements.txt
          sudo pip install "pyOpenSSL>=23.*"
      - name: Create the test configuration
        run: |
          cat <<EOF > web/config_local.py
          from config import *
          # Debug mode
          DEBUG = True
          
          # App mode
          SERVER_MODE = False
          
          # Log
          CONSOLE_LOG_LEVEL = DEBUG
          FILE_LOG_LEVEL = DEBUG
          
          DEFAULT_SERVER = '127.0.0.1'
          
          UPGRADE_CHECK_ENABLED = False
          
          LOG_FILE = "$(pwd)/var/pgadmin4.log"
          SESSION_DB_PATH = "$(pwd)/var/sessions"
          STORAGE_DIR = "$(pwd)/var/storage"
          SQLITE_PATH = "$(pwd)/var/pgadmin4.db"
          TEST_SQLITE_PATH = "$(pwd)/var/pgadmin4.db"
          AZURE_CREDENTIAL_CACHE_DIR = "$(pwd)/var/azurecredentialcache"
          EOF
          cat <<EOF > web/regression/test_config.json
          {
            "pgAdmin4_login_credentials": {
              "new_password": "NEWPASSWORD",
              "login_password": "PASSWORD",
              "login_username": "USER@EXAMPLE.COM"
            },
            "pgAdmin4_test_user_credentials": {
              "new_password": "NEWPASSWORD",
              "login_password": "PASSWORD",
              "login_username": "USER2@EXAMPLE.COM"
            },
            "pgAdmin4_test_non_admin_credentials": {
              "new_password": "NEWPASSWORD",
              "login_password": "PASSWORD",
              "login_username": "USER@EXAMPLE.COM"
            },
            "server_group": 1,
            "server_credentials": [
              {
                "name": "PostgreSQL ${POSTGRESQL_VERSION}",
                "comment": "PostgreSQL ${POSTGRESQL_VERSION} Server",
                "db_username": "postgres",
                "host": "/var/run/postgresql",
                "db_password": "postgres",
                "db_port": 59${POSTGRESQL_VERSION},
                "maintenance_db": "postgres",
                "sslmode": "prefer",
                "tablespace_path": "/var/lib/postgresql/tablespaces/${POSTGRESQL_VERSION}",
                "enabled": true,
                "default_binary_paths": {
                  "pg": "/usr/lib/postgresql/${POSTGRESQL_VERSION}/bin",
                  "ppas": ""
                }
              }
            ],
            "server_update_data": [
              {
                "comment": "This is test update comment"
              }
            ]
          }
          EOF
      - name: Run the tests
        run: make check-python

      - name: Archive server log
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: server-log
          path: var/pgadmin4.log

      - name: Archive regression log
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: regression-log
          path: web/regression/regression.log
